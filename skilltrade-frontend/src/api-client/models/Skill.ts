/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { User } from './User';
import {
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
    UserToJSONTyped,
} from './User';

/**
 * 
 * @export
 * @interface Skill
 */
export interface Skill {
    /**
     * 
     * @type {number}
     * @memberof Skill
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof Skill
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof Skill
     */
    proficiency?: string;
    /**
     * 
     * @type {User}
     * @memberof Skill
     */
    user?: User;
}

/**
 * Check if a given object implements the Skill interface.
 */
export function instanceOfSkill(value: object): value is Skill {
    return true;
}

export function SkillFromJSON(json: any): Skill {
    return SkillFromJSONTyped(json, false);
}

export function SkillFromJSONTyped(json: any, ignoreDiscriminator: boolean): Skill {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'proficiency': json['proficiency'] == null ? undefined : json['proficiency'],
        'user': json['user'] == null ? undefined : UserFromJSON(json['user']),
    };
}

export function SkillToJSON(json: any): Skill {
    return SkillToJSONTyped(json, false);
}

export function SkillToJSONTyped(value?: Skill | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'proficiency': value['proficiency'],
        'user': UserToJSON(value['user']),
    };
}

