/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  Skill,
  SkillDTO,
} from '../models/index';
import {
    SkillFromJSON,
    SkillToJSON,
    SkillDTOFromJSON,
    SkillDTOToJSON,
} from '../models/index';

export interface AddSkillRequest {
    skillDTO: SkillDTO;
}

export interface ByProficiencyRequest {
    level: string;
}

/**
 * 
 */
export class SkillControllerApi extends runtime.BaseAPI {

    /**
     */
    async addSkillRaw(requestParameters: AddSkillRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['skillDTO'] == null) {
            throw new runtime.RequiredError(
                'skillDTO',
                'Required parameter "skillDTO" was null or undefined when calling addSkill().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/skills/add`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: SkillDTOToJSON(requestParameters['skillDTO']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async addSkill(requestParameters: AddSkillRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.addSkillRaw(requestParameters, initOverrides);
    }

    /**
     */
    async byProficiencyRaw(requestParameters: ByProficiencyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Skill>>> {
        if (requestParameters['level'] == null) {
            throw new runtime.RequiredError(
                'level',
                'Required parameter "level" was null or undefined when calling byProficiency().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/skills/by-level/{level}`.replace(`{${"level"}}`, encodeURIComponent(String(requestParameters['level']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(SkillFromJSON));
    }

    /**
     */
    async byProficiency(requestParameters: ByProficiencyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Skill>> {
        const response = await this.byProficiencyRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async mySkillsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Skill>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/skills/my`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(SkillFromJSON));
    }

    /**
     */
    async mySkills(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Skill>> {
        const response = await this.mySkillsRaw(initOverrides);
        return await response.value();
    }

}
